{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGif.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGif","category","a","encodeURI","fetch","resp","json","data","gif","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","propTypes","PropTypes","func","isRequired","GifExpertApp","categories","divRoot","document","getElementById","ReactDOM","render"],"mappings":"4MAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAahD,OACE,sBAAMC,SARa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,QAAU,IAC9BR,GAAc,SAACS,GAAD,OAAUP,GAAV,mBAAyBO,OACvCN,EAAc,MAIhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAbhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,QCHdG,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACnC,OACE,mCACE,qBAAKC,UAAU,2CAAf,SACE,qBAAKC,IAAKF,EAAKG,IAAKJ,S,uBCNfK,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdN,EADc,iDACkCO,UACpDF,GAFkB,+DAIDG,MAAMR,GAJL,cAIdS,EAJc,gBAKGA,EAAKC,OALR,uBAKZC,EALY,EAKZA,KACFC,EAAMD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAVlB,kBAabY,GAba,4CAAH,sDCINM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdpB,mBAAS,CACjC0B,KAAM,GACNQ,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRlB,EAAOC,GAAUkB,MAAK,SAACC,GACrBH,EAAS,CACPV,KAAMa,EACNL,SAAS,SAGZ,CAACd,IAEGe,EDb2BK,CAAapB,GAAjCW,EADyB,EAC/BL,KAAcQ,EADiB,EACjBA,QAEtB,OACE,qCACE,oBAAIlB,UAAU,wCAAd,SAAuDI,IACtDc,GACC,mBAAGlB,UAAU,0CAAb,sBAGF,qBAAKA,UAAU,YAAf,SACGe,EAAOH,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEOhChC,EAAY2C,UAAY,CACtB1C,cAAe2C,IAAUC,KAAKC,YAGjBC,MAtBM,WAAO,IAAD,EACW7C,mBAAS,CAAC,SADrB,mBAClB8C,EADkB,KACN/C,EADM,KAGzB,OACE,qCACE,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACG+C,EAAWlB,KAAI,SAACR,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCXlB2B,G,MAAUC,SAASC,eAAe,SAExCC,IAASC,OAAO,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.f152498b.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handelSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length >= 2) {\n      setCategories((cat) => [inputValue, ...cat]);\n      setInputValue('');\n    }\n  };\n  return (\n    <form onSubmit={handelSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n    </form>\n  );\n};\n","// import React from 'react'\n\nexport const GifGridItem = ({ title, url }) => {\n  return (\n    <>\n      <div className=\"card animate__animated animate__fadeInUp\">\n        <img src={url} alt={title} />\n        {/* <p className=\"center\">{title}</p> */}\n      </div>\n    </>\n  );\n};\n","export const getGif = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=joEcwTHpTSEXI4IAa1JWhsiqPCxxvfFR`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gif = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n  return gif;\n};\n","// import React, { useState, useEffect } from 'react';\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeInDown\">{category}</h3>\n      {loading && (\n        <p className=\"center animate__animated animate__pulse\">Cargando</p>\n      )}\n\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getGif } from '../helpers/getGif';\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGif(category).then((imgs) => {\n      setState({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState(['Lost']);\n\n  return (\n    <>\n      <h2> GifExpertApp </h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n\n      <ul>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nconst divRoot = document.getElementById('root');\n\nReactDOM.render(<GifExpertApp />, divRoot);\n"],"sourceRoot":""}